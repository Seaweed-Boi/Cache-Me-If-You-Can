version: '3.8'

services:
  # RAG Application - Main FastAPI service
  rag-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag-app
    ports:
      - "8000:8000"
    environment:
      # Local model configuration (optional)
      - LOCAL_MODEL_NAME=${LOCAL_MODEL_NAME}
      # Embedding model configuration
      - EMBEDDING_MODEL_NAME=${EMBEDDING_MODEL_NAME:-all-MiniLM-L6-v2}
      # Qdrant connection
      - QDRANT_HOST=${QDRANT_HOST:-qdrant}
      - QDRANT_PORT=${QDRANT_PORT:-6333}
      - QDRANT_COLLECTION=${QDRANT_COLLECTION:-rag_documents}
      # Data path for PDFs
      - DATA_PATH=${DATA_PATH:-/app/data}
      # Enable Prometheus metrics
      - ENABLE_METRICS=true
    volumes:
      # Mount data directory for PDF files
      - ./data:/app/data
      # (Using Qdrant for vectors; no local Chroma DB mount required)
      # Mount source code for development (optional, comment out for production)
      - ./src:/app/src
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Qdrant - Vector database for embeddings
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant-storage:/qdrant/storage
    networks:
      - rag-network
    restart: unless-stopped

  # Grafana - Optional visualization dashboard (uncomment to use)
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_INSTALL_PLUGINS=
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   networks:
  #     - rag-network
  #   depends_on:
  #     - prometheus
  #   restart: unless-stopped

networks:
  rag-network:
    driver: bridge
    name: rag-network

volumes:
  qdrant-storage:
    name: qdrant-storage
  # grafana-data:
  #   name: grafana-data

